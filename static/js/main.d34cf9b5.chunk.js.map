{"version":3,"sources":["Components/Header/interstelar.jpg","Components/Header/thor.jpg","Components/Header/rampage.jpg","Components/Header/avengers.jpg","Components/Header/movie6.jpg","Components/Header/movie4.jpg","Components/Navigation/Navigation.js","Components/Header/Header.js","Components/Footer/Footer.js","Components/Movie/Movie.js","Components/ResultList/ResultList.js","Components/Input/Input.js","Components/Pagination/Pagination.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","className","style","color","id","href","fontSize","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","tabIndex","aria-disabled","Header","src","interstelar","alt","movie4","london","thor","avengers","rampage","Footer","title","Movie","props","image","width","height","show","fontFamily","name","first_air_date","overview","ResultList","overflowY","lineHeight","boxShadow","marginLeft","movies","map","movie","i","key","poster_path","Input","onButtonSearch","onInputChange","htmlFor","placeholder","action","onChange","onClick","Pagination","pageLinks","push","nextPage","pages","App","pageNumber","fetch","apiKey","state","input","then","response","json","data","console","log","setState","results","currentPage","route","event","target","value","totalResults","total_results","onRouteChange","process","numberPages","Math","floor","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d34cf9b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/interstelar.8f35b89e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thor.fc4e6f11.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rampage.d88b383d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avengers.aaaab3fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/movie6.1fe79cce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/movie4.462e11a9.jpg\";","import React from 'react';\r\nimport './Navigation.css'\r\n\r\n\r\nconst Navigation = () => {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-transparent \" style={{color: 'white'}}>\r\n          <a className=\"navbar-brand\" id='logo' href=\"http://localhost:3000/\" style={{fontSize: '25px', color: 'white'}}>TV-Lab</a>\r\n          <button  className=\"navbar-toggler bg-light\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n              <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"http://localhost:3000/\"> <span className=\"sr-only\">(current)</span></a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"http://localhost:3000/\" style={{color: 'white'}}>Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link disabled\" href=\"http://localhost:3000/\" tabIndex=\"-1\" aria-disabled=\"true\"></a>\r\n              </li>\r\n            </ul>\r\n            \r\n          </div>\r\n        </nav>\r\n      )\r\n  }\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './Header.css';\r\nimport interstelar from './interstelar.jpg'\r\nimport thor from './thor.jpg';\r\nimport rampage from './rampage.jpg';\r\nimport avengers from './avengers.jpg';\r\nimport london from './movie6.jpg';\r\nimport movie4 from './movie4.jpg';\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n      <div className=\"container\">\r\n      <div className=\"box\">\r\n        <img src={interstelar} alt=''/>\r\n        <span></span>\r\n      </div>\r\n      <div className=\"box\">\r\n        <img src={movie4} alt=''/>\r\n        <span></span>\r\n      </div>\r\n      <div className=\"box\">\r\n        <img src={london} alt=''/>\r\n        <span></span>\r\n      </div>\r\n      <div className=\"box\">\r\n        <img src={thor} alt=''/>\r\n        <span></span>\r\n      </div>\r\n      <div className=\"box\">\r\n        <img src={avengers} alt=''/>\r\n        <span></span>\r\n      </div>\r\n      <div className=\"box\">\r\n        <img src={rampage} alt=''/>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className='center' >\r\n        <footer className=\"pv4 ph3 ph5-m ph6-l bg-white\">\r\n          <small className=\"f6 db tc\">Â© 2019 <b className=\"ttu\">Ciora Dorin</b>., All Rights Reserved</small>\r\n          <div className=\"tc mt3\">\r\n            <a href=\"/language/\" title=\"Language\" className=\"f6 dib ph2 link  dim\">Language</a>\r\n            <a href=\"/terms/\"    title=\"Terms\" className=\"f6 dib ph2 link  dim\">Terms of Use</a>\r\n            <a href=\"/privacy/\"  title=\"Privacy\" className=\"f6 dib ph2 link dim\">Privacy</a>\r\n          </div>\r\n        </footer>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Footer;","import React from 'react';\r\nimport './Movie.css'\r\n\r\nconst Movie = (props) => {\r\n    return (\r\n        <div className=\"dt mw6 center pt0 pb5 pv5-m pv6-ns\">\r\n            <div className=\"db dtc-ns v-mid-ns\">\r\n            {props.image == null \r\n                ? <img src={`https://aliceasmartialarts.com/wp-content/uploads/2017/04/default-image.jpg`} alt='movie poster' style={{width: '200px', height: 250}}/> \r\n                : <img src={`https://image.tmdb.org/t/p/w185${props.image}`} alt='movie poster' style={{width: '200px', height: 250}}/>}\r\n            <a href={`https://www.themoviedb.org/tv/${props.show.id}?language=en-US`}>Details</a>\r\n            </div>\r\n            <div className=\"db dtc-ns v-mid ph2 pr0-ns pl3-ns\">\r\n                <ul>\r\n                    <li style={{color: '#6495ED', fontFamily: 'italic'}}>Title: {props.show.name}</li>\r\n                    <li style={{color: '#B8860B', fontFamily: 'italic'}}>First Aired: {props.show.first_air_date}</li>\r\n                    <li style={{color: '#228B22', fontFamily: 'italic'}}>{props.show.overview}</li>\r\n                </ul>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport Movie from '../Movie/Movie';\r\n\r\nconst ResultList = (props) => {\r\n   \r\n    return (\r\n    <div className='container'>\r\n        <div className='box' style={{overflowY: 'scroll', lineHeight: '1.5', boxShadow: '0 20px 30px #004085', marginLeft: '5px'}}>\r\n                {\r\n                    props.movies.map((movie, i) => {\r\n                        return (\r\n                            <Movie key={i} show={movie}  image={movie.poster_path}/>\r\n                        )\r\n                    })\r\n                }\r\n        </div>\r\n    </div>\r\n    )}\r\n\r\nexport default ResultList;","import React from 'react';\r\nimport './Input.css'\r\n\r\nconst Input = ({ onButtonSearch, onInputChange }) => {\r\n    return (\r\n        <div className=\"pa1-l\">\r\n        <article className=\"bg-transparent mw7 center pa4 br2-ns ba b--black-10\">\r\n          <fieldset className=\"cf bn ma0 pa0\">\r\n            <legend className=\"pa0 f5 f4-ns mb3 black-80\" style={{color:'white'}}>Your favorite informations about your favorite shows</legend>\r\n            <div className=\"cf\">\r\n              <label className=\"clip\" htmlFor=\"email-address\">Email Address</label>\r\n              <input className=\"f6 f5-l input-reset bn fl black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns br--left-ns\" placeholder=\"Search show\" type=\"text\" name=\"email-address\" id=\"search-show\" action=\"\" onChange={onInputChange}/>\r\n              <button type=\"button\" className=\"btn btn-success\" onClick={onButtonSearch}>Search</button>\r\n            </div>\r\n          </fieldset>\r\n        </article>\r\n      </div>\r\n    )\r\n}\r\n \r\nexport default Input;","import React from 'react';\r\n\r\nconst Pagination = (props) => {\r\n    const pageLinks = []\r\n\r\n    for(let i=1; i <= props.pages + 1; i++) {\r\n        pageLinks.push(<li className='page-link' key={i} onClick={() => props.nextPage(i)}>\r\n            <a>{i}</a>\r\n        </li>)\r\n    }\r\n    return (\r\n        <div className='box'>\r\n        <nav aria-label=\"Page navigation example\">\r\n            <ul className=\"pagination justify-content-center\">\r\n    \r\n                {pageLinks}\r\n\r\n            </ul>\r\n            </nav>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\nimport ResultList from './Components/ResultList/ResultList';\nimport Input from './Components/Input/Input';\nimport Pagination from './Components/Pagination/Pagination';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n  super();\n  this.state = {\n    input: '',\n    movies: [],\n    totalResults: 0,\n    currentPage: 1,\n    route: 'mainpage'\n  }\n    this.apiKey = process.env.REACT_APP_API\n  }\n\nnextPage = (pageNumber) => {\n  fetch(`https://api.themoviedb.org/3/search/tv?api_key=${this.apiKey}&query=${this.state.input}&page=${pageNumber}`)\n  .then(response => response.json())\n  .then(data => {\n    console.log(data)\n    this.setState({ movies: [...data.results], currentPage: pageNumber })\n    this.setState({route: 'search'})\n  })\n  } \n  \n  onInputChange = (event) => {\n    console.log(event.target.value)\n    this.setState({input: event.target.value})\n  }\n\n  onButtonSearch = () => {\n    fetch(`https://api.themoviedb.org/3/search/tv?api_key=${this.apiKey}&query=${this.state.input}`)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data)\n      this.setState({ movies: [...data.results], totalResults: data.total_results})\n      this.setState({route: 'search'})\n    })\n    } \n    \n    onRouteChange =() => {\n      this.setState({route: 'search'})\n    }\n\n  \n  render() {\n    const numberPages = Math.floor(this.state.totalResults / 20) \n  return (\n    <div className=\"App\">\n    <Navigation />\n    { this.state.route === 'search'\n    ? <div><Input />\n    {this.state.totalResults > 20 \n    ? <Pagination  pages={numberPages} nextPage={this.nextPage} currentPage={this.state.currentPage}/> : ''}\n    <ResultList  movies={this.state.movies}/>\n    <Footer /> </div>\n    : <div>\n      <Header />\n    <Input onInputChange={this.onInputChange} onButtonSearch={this.onButtonSearch} onRouteChange={this.onRouteChange}/>\n    <Footer />\n    </div>\n    }\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}